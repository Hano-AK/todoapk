const input=document.querySelector("input"),addButton=document.querySelector("#next"),ul=document.querySelector("ul"),li=document.querySelectorAll("li");let datas=[],id=0;function addTodo(){++id;const inputValue=input.value;if(inputValue.trim()){console.log(inputValue);const todoModel={id:id,text:inputValue,completed:!1};localStorage.getItem("datas")?(console.log(typeof datas),datas=JSON.parse(localStorage.getItem("datas")),console.log(typeof datas),datas.push(todoModel),console.log(datas),localStorage.setItem("datas",JSON.stringify(datas))):(datas.push(todoModel),localStorage.setItem("datas",JSON.stringify(datas))),input.value="",renderAllTodo()}}addButton.addEventListener("click",addTodo);const todotemplate=function(todo){return`<li class ="todolist"><div id ="elt" ><div class ="spa"><span  onclick="completeTask(${todo.id})" class=${todo.completed&&"completed"}>${todo.text}</span></div>\n        <button onclick="editTodo(${todo.id})" class="edit">Edit</button>\n      <button  onclick="deleteTodo(${todo.id})" class="delete">delete</button>\n\n            </div>`};function renderAllTodo(){let newtodolist="";if(localStorage.getItem("datas")){datas=JSON.parse(localStorage.getItem("datas"));for(let i=0;i<datas.length;i++)newtodolist+=todotemplate(datas[i]);ul.innerHTML=newtodolist}}function deleteTodo(id){const newDatas=[];for(let i=0;i<datas.length;i++)datas[i].id!==id&&(console.log(id),newDatas.push(datas[i]));datas=newDatas,localStorage.setItem("datas",JSON.stringify(datas)),console.log(datas),renderAllTodo()}function completeTask(id){datas=datas.map(element=>(console.log(element),element.id===id&&(element.completed=!element.completed),element)),localStorage.setItem("datas",JSON.stringify(datas)),console.log(datas),renderAllTodo()}function editTodo(id){const editbtn=document.querySelectorAll(".edit"),modalbg=document.querySelector(".modal-bg"),closebtn=document.querySelector(".fermer"),inputBtt=document.querySelector(".finput"),saveBtt=document.querySelector(".savebtn"),value=inputBtt.value,text=document.querySelector(".completed");for(let i=0;i<datas.length;i++)modalbg.classList.add("modal-active"),closebtn.addEventListener("click",(function(){modalbg.classList.remove("modal-active")})),saveBtt.addEventListener("click",(function(){const todoModel={id:id,text:value,completed:!1};datas.push(todoModel)})),input.value="",renderAllTodo()}renderAllTodo();